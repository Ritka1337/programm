#pragma
#include <iostream>
#include <time.h>
using namespace std;
int main()
{
	int tor[12][12];
	int x, y, z;
	srand(time(0));
	for (int i = 0; i < 12; i++)
	{
		for (int j = 0; j < 12; j++)
		{
			tor[i][j] = 0;
		}
	}
	x = 0;
	y = 0;
	tor[x][y] = 8;
	for (int i = 0; i < 11; i++)
	{
		tor[x][y + 1] = 8;
		y++;
	}
	for (int i = 0; i < 11; i++)
	{
		tor[x + 1][y] = 8;
		x++;
	}
	for (int i = 0; i < 11; i++)
	{
		tor[x][y - 1] = 8;
		y--;
	}
	for (int i = 0; i < 11; i++)
	{
		tor[x - 1][y] = 8;
		x--;
	}
	for (int i = 0; i < 1; i++) // четверной кораблик
	{
		x = rand() % 9 + 1;
		y = rand() % 9 + 1;
		z = rand() % 1;
		if (z == 0)
		{
			if (tor[x][y] == 0 &&
				tor[x][y - 1] == 0 &&
				tor[x][y + 1] == 0 &&
				tor[x][y + 2] == 0 &&
				tor[x][y - 2] == 0 &&
				tor[x][y - 3] == 0 &&
				tor[x][y + 3] == 0 &&
				tor[x][y - 4] == 0 &&
				tor[x][y + 4] == 0
				)
			{
				tor[x][y] = 1;
				int r;
				srand(time(0));
				r = rand() % 1;
				if (r == 1) // слева либо справа от 1
				{
					tor[x][y + 1] = 1; //12
					r = rand() % 1;
					if (r == 1)
					{
						tor[x][y + 2] = 1; //1 2 3
						r = rand() % 1;
						if (r == 1)
						{
							tor[x][y + 3] = 1; //1 2 3 4
						}
						else
						{
							tor[x][y - 1] = 1; //-1 1 2 3
						}
					}
					else
					{
						tor[x][y - 1] = 1; //-1 1 2
						srand(time(0));
						r = rand() % 1;
						if (r == 1)
						{
							tor[x][y + 2] = 1; //-1 1 2 3
						}
						else
						{
							tor[x][y - 2] = 1; //-2 -1 1 2
						}
					}
				}
				else
				{
					tor[x][y - 1] = 1; //-11
					srand(time(0));
					r = rand() % 1;
					if (r == 1)
					{
						tor[x][y - 2] = 1; //-2 -1 1
						srand(time(0));
						r = rand() % 1;
						if (r == 1)
						{
							tor[x][y - 3] = 1; //-3 -2 -1 1
						}
						else
						{
							tor[x][y + 1] = 1; //-2 -1 1 2
						}
					}
					else
					{
						tor[x][y + 1] = 1; // -1 1 2
						r = rand() % 1;
						if (r == 1)
						{
							tor[x][y - 2] = 1; //-2 -1 1 2
						}
						else
						{
							tor[x][y + 2] = 1; //-1 1 2 3
						}
					}
				}
			}
			else
			{
				i--;
			}
		}
		else 
		{
			if (tor[x][y] == 0 &&
				tor[x][y - 1] == 0 &&
				tor[x][y + 1] == 0 &&
				tor[x][y + 2] == 0 &&
				tor[x][y - 2] == 0 &&
				tor[x][y - 3] == 0 &&
				tor[x][y + 3] == 0 &&
				tor[x][y - 4] == 0 &&
				tor[x][y + 4] == 0
				)
			{
				tor[x][y] = 1;
				int r;
				srand(time(0));
				r = rand() % 1;
				if (r == 1) // слева либо справа от 1
				{
					tor[x][y + 1] = 1; //12
					r = rand() % 1;
					if (r == 1)
					{
						tor[x][y + 2] = 1; //1 2 3
						r = rand() % 1;
						if (r == 1)
						{
							tor[x][y + 3] = 1; //1 2 3 4
						}
						else
						{
							tor[x][y - 1] = 1; //-1 1 2 3
						}
					}
					else
					{
						tor[x][y - 1] = 1; //-1 1 2
						srand(time(0));
						r = rand() % 1;
						if (r == 1)
						{
							tor[x][y + 2] = 1; //-1 1 2 3
						}
						else
						{
							tor[x][y - 2] = 1; //-2 -1 1 2
						}
					}
				}
				else
				{
					tor[x][y - 1] = 1; //-11
					srand(time(0));
					r = rand() % 1;
					if (r == 1)
					{
						tor[x][y - 2] = 1; //-2 -1 1
						srand(time(0));
						r = rand() % 1;
						if (r == 1)
						{
							tor[x][y - 3] = 1; //-3 -2 -1 1
						}
						else
						{
							tor[x][y + 1] = 1; //-2 -1 1 2
						}
					}
					else
					{
						tor[x][y + 1] = 1; // -1 1 2
						r = rand() % 1;
						if (r == 1)
						{
							tor[x][y - 2] = 1; //-2 -1 1 2
						}
						else
						{
							tor[x][y + 2] = 1; //-1 1 2 3
						}
					}
				}
			}
			else
			{
				i--;
			}
		}
		
	}
	for (int i = 0; i < 2; i++) // трипл кораблик
	{
		x = rand() % 9 + 1;
		y = rand() % 9 + 1;
		if (tor[x][y] == 0 &&
			tor[x][y - 1] == 0 &&
			tor[x][y + 1] == 0 &&
			tor[x - 1][y] == 0 &&
			tor[x + 1][y] == 0 &&
			tor[x - 1][y - 1] == 0 &&
			tor[x - 1][y + 1] == 0 &&
			tor[x + 1][y - 1] == 0 &&
			tor[x + 1][y + 1] == 0 && //конец проверки вокруг первой однерки
			tor[x][y + 2] == 0 &&
			tor[x - 1][y + 2] == 0 &&
			tor[x + 1][y + 2] == 0 && //доп проверка вокруг второй однерки
			tor[x][y - 2] == 0 &&
			tor[x - 1][y - 2] == 0 &&
			tor[x + 1][y - 2] == 0 && //доп проверка вокруг третей однерки
			tor[x][y - 3] == 0 &&
			tor[x - 1][y - 3] == 0 &&
			tor[x + 1][y - 3] == 0 && //стенка от левой однерки
			tor[x][y + 3] == 0 &&
			tor[x - 1][y + 3] == 0 &&
			tor[x + 1][y + 3] == 0 //стенка от правой однерки
			)
		{
			tor[x][y] = 1;
			int r;
			srand(time(0));
			r = rand() % 1;
			if (r == 1) // слева либо справа от 1
			{
				tor[x][y + 1] = 1; //12
				r = rand() % 1;
				if (r == 1)
				{
					tor[x][y + 2] = 1; //1 2 3
				}
				else
				{
					tor[x][y - 1] = 1; //-1 1 2
				}
			}
			else
			{
				tor[x][y - 1] = 1; //-11
				r = rand() % 1;
				if (r == 1)
				{
					tor[x][y - 2] = 1; //-2 -1 1
				}
				else
				{
					tor[x][y + 1] = 1; //-1 1 2
				}
			}
		}
		else
		{
			i--;
		}
	}
	for (int i = 0; i < 3; i++) // дабл кораблик
	{
		x = rand() % 9 + 1;
		y = rand() % 9 + 1;
		if (tor[x][y] == 0 &&
			tor[x][y - 1] == 0 &&
			tor[x][y + 1] == 0 &&
			tor[x - 1][y] == 0 &&
			tor[x + 1][y] == 0 &&
			tor[x - 1][y - 1] == 0 &&
			tor[x - 1][y + 1] == 0 &&
			tor[x + 1][y - 1] == 0 &&
			tor[x + 1][y + 1] == 0 && //конец проверки вокруг первой однерки
			tor[x][y + 2] == 0 &&
			tor[x - 1][y + 2] == 0 &&
			tor[x + 1][y + 2] == 0 && //доп проверка вокруг второй однерки(справа)
			tor[x][y - 2] == 0 &&
			tor[x - 1][y - 2] == 0 &&
			tor[x + 1][y - 2] == 0 //доп проверка вокруг второй однерки(слева)
			)
		{
			tor[x][y] = 1;
			int r;
			srand(time(0));
			r = rand() % 1;
			if (r == 1)
			{
				tor[x][y + 1] = 1;
			}
			else
			{
				tor[x][y - 1] = 1;
			}
		}
		else
		{
			i--;
		}
	}
	for (int i = 0; i < 4; i++) // соло кораблик
	{
		x = rand() % 9 + 1;
		y = rand() % 9 + 1;
		if (tor[x][y] == 0 &&
		tor[x][y - 1] == 0 &&
		tor[x][y + 1] == 0 &&
		tor[x - 1][y] == 0 &&
		tor[x + 1][y] == 0 &&
		tor[x - 1][y - 1] == 0 &&
		tor[x - 1][y + 1] == 0 &&
		tor[x + 1][y - 1] == 0 &&
		tor[x + 1][y + 1] == 0 //проверка вокруг однерки
		)
		{
			tor[x][y] = 1;
		}
		else
		{
			i--;
		}
	}
	for (int i = 0; i < 12; i++)
	{
		for (int j = 0; j < 12; j++)
		{
			cout << tor[i][j];
		}
		cout << endl;
	}
	return 0;
}
