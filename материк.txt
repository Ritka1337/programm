#include <iostream>
#include<vector>
#include<ctime>
#include <stdlib.h>
using namespace std;

void show(vector<vector<char>>& map)
{
	system("cls");
	for (int i = 0; i < map.size(); i++)
	{
		for (int j = 0; j < map[i].size(); j++)
			cout << map[i][j] << " ";
		cout << endl;
	}
}

void rand_point(const int &x,const int &y, vector<vector<char>>&map,int& variaty,unsigned int& map_size)
{
	map[x][y]='#';
	show(map);
	try
	{
		switch (rand()%8)
		{
			case 0:
			{
				if (variaty > rand() % 100)
					if(x+1<map_size)
						rand_point(x + 1, y, map, variaty,map_size);
			}
			case 1:
			{
				if (variaty > rand() % 100)
					if (x + 1 < map_size&& y+1< map_size)
						rand_point(x + 1, y + 1, map, variaty, map_size);
				break;
			}
			case 2:
			{
				if (variaty > rand() % 100)
					if (x + 1 < map_size && y - 1 >=0)
						rand_point(x + 1, y - 1, map, variaty, map_size);
			}
			case 3:
			{
				if (variaty > rand() % 100)
					if (x - 1 >=0 && y - 1 >=0)
					rand_point(x - 1, y - 1, map, variaty, map_size);
				break;
			}
			case 4:
			{
				if (variaty > rand() % 100)
					if (x - 1 >=0 && y + 1 < map_size)
						rand_point(x - 1, y + 1, map, variaty, map_size);
			}
			case 5:
			{
				if (variaty > rand() % 100)
					if (x - 1 >=0)
						rand_point(x - 1,y, map, variaty, map_size);
				break;
			}
			case 6:
			{
				if (variaty > rand() % 100)
					if (y - 1 >=0)
						rand_point(x, y - 1, map, variaty, map_size);
			}
			case 7:
			{
				if (variaty > rand() % 100)
					if (y + 1 < map_size)
						rand_point(x, y + 1, map, variaty, map_size);
				break;
			}
		}
		variaty /= 2;
	}
	catch(exception e)
	{
		return;
	}
}

int main()
{
	unsigned int map_size;
	cin >> map_size;
	vector<vector<char>>map(map_size, vector<char>(map_size));
	srand(time(0));
	int x = rand() % map_size;
	int y = rand() % map_size;
	int variaty = 100;
	rand_point(x, y, map, variaty, map_size);
	show(map);
	return 0;
}